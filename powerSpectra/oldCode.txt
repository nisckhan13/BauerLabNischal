%-----------------------------------------------------------------------------------------------------------

loadData = load('C:\Users\Nischal\Documents\MATLAB_Test\TestProcessed\190530\190530-R3M2368-fc1-dataHb.mat');
loadDataFluor = load('C:\Users\Nischal\Documents\MATLAB_Test\TestProcessed\190530\190530-R3M2368-fc1-dataFluor.mat');

%store HB and Fluor data along with brain mask
dataHb = loadData.xform_datahb;
dataFluorCorr = loadDataFluor.xform_datafluorCorr;
mask = loadData.xform_isbrain;

%seperate into O, R, T
dataO = squeeze(dataHb(:,:,1,:));
dataR = squeeze(dataHb(:,:,2,:));
dataT = squeeze(sum(loadData.xform_datahb,3));

data = {dataO, dataR, dataT, dataFluorCorr};
dataLegend = ["HbO", "HbR", "HbT", "FluorCorr"];

 %% across mask

 for ind=1:4
    tic;
    speciesData = data{ind};
    speciesDataReshaped = reshape(speciesData,[],size(speciesData,3)); % pix by time
    [spectra,freq] = pwelch(speciesDataReshaped',[],[],[],fs);
    spectra = spectra';
    spectra = reshape(spectra,size(speciesData,1),size(speciesData,2),[]);
    toc

    %log before taking mean (to normalize)
    spectraLog = log(spectra);
    spectraLogVector = reshape(spectraLog,16384,[]);
    maskVector = reshape(mask,numel(mask),1);
    %apply the mask to spectra
    spectraLogMask = spectraLogVector(maskVector,:);
    %take mean of first dimension
    meanSpectraLog = mean(spectraLogMask,1);
    meanSpectra = exp(meanSpectraLog);

    figure(1);
    if contains(dataLegend(ind), 'Fluor')
        yyaxis right
        loglog(freq, meanSpectra);
        ylim([-inf 1.1*max(meanSpectra)]);
        set(gca, 'YScale', 'log');
    else
        yyaxis left
        loglog(freq, meanSpectra);
    end
    hold on;

    for ind2=1:length(fRange)
        figure(ind2+1);
        sgtitle([num2str(fRange(ind2,1)) ' - ' num2str(fRange(ind2,2)) 'Hz Power Map']);
        subplot(2,2,ind);
        freqRange = [fRange(ind2,1) fRange(ind2,2)];
        bandFreq = freq >= freqRange(1) & freq <= freqRange(2);
        spectraLog10 = log10(spectra);
        spectraLogBand = spectraLog10(:,:,bandFreq);
        meanSpectraLogBand = mean(spectraLogBand,3);
        meanMask = stdMask.leftMask | stdMask.rightMask;
        imagesc(meanSpectraLogBand,'AlphaData',meanMask);
        cb = colorbar();
        axis(gca,'square');
        set(gca,'Visible','off');
        colormap jet;
        titleObj = title(dataLegend(ind),'FontSize',13);
        set(titleObj,'Visible','on');
        if contains(dataLegend(ind), 'Fluor')
            ylabelObj = ylabel(cb,'log10 ((\DeltaF/F)^2)','FontSize',13);
        else
            ylabelObj = ylabel(cb,'log10 (M^2)','FontSize',13);
        end
        set(ylabelObj,'Visible','on');
    end
end

figure(1);
xlim([10^-2 10]);
xlabel('Frequency (Hz)','FontSize',13)
legend(dataLegend,'FontSize',13)
pbaspect([1 1 1]); % make the plot square
title('Power Density Spectrum','FontSize',13) %also add name of mouse here
yyaxis left
ylabel('HB (M^2/Hz)','FontSize',13)
yyaxis right
ylabel('Fluor ((\DeltaF/F)^2/Hz)','FontSize',13)
